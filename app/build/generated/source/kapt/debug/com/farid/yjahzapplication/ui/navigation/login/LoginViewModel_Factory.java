// Generated by Dagger (https://dagger.dev).
package com.farid.yjahzapplication.ui.navigation.login;

import com.farid.yjahzapplication.data.local.LocalRepositoryImplementation;
import com.farid.yjahzapplication.data.useCases.loginUseCase.LoginUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class LoginViewModel_Factory implements Factory<LoginViewModel> {
  private final Provider<LoginUseCase> loginUseCaseProvider;

  private final Provider<LocalRepositoryImplementation> mainRepositoryProvider;

  public LoginViewModel_Factory(Provider<LoginUseCase> loginUseCaseProvider,
      Provider<LocalRepositoryImplementation> mainRepositoryProvider) {
    this.loginUseCaseProvider = loginUseCaseProvider;
    this.mainRepositoryProvider = mainRepositoryProvider;
  }

  @Override
  public LoginViewModel get() {
    return newInstance(loginUseCaseProvider.get(), mainRepositoryProvider.get());
  }

  public static LoginViewModel_Factory create(Provider<LoginUseCase> loginUseCaseProvider,
      Provider<LocalRepositoryImplementation> mainRepositoryProvider) {
    return new LoginViewModel_Factory(loginUseCaseProvider, mainRepositoryProvider);
  }

  public static LoginViewModel newInstance(LoginUseCase loginUseCase,
      LocalRepositoryImplementation mainRepository) {
    return new LoginViewModel(loginUseCase, mainRepository);
  }
}
