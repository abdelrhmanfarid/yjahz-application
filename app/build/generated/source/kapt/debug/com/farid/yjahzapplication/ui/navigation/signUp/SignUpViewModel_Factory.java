// Generated by Dagger (https://dagger.dev).
package com.farid.yjahzapplication.ui.navigation.signUp;

import com.farid.yjahzapplication.data.local.LocalRepositoryImplementation;
import com.farid.yjahzapplication.data.useCases.registerUseCase.RegisterUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class SignUpViewModel_Factory implements Factory<SignUpViewModel> {
  private final Provider<RegisterUseCase> registerUseCaseProvider;

  private final Provider<LocalRepositoryImplementation> mainRepositoryProvider;

  public SignUpViewModel_Factory(Provider<RegisterUseCase> registerUseCaseProvider,
      Provider<LocalRepositoryImplementation> mainRepositoryProvider) {
    this.registerUseCaseProvider = registerUseCaseProvider;
    this.mainRepositoryProvider = mainRepositoryProvider;
  }

  @Override
  public SignUpViewModel get() {
    return newInstance(registerUseCaseProvider.get(), mainRepositoryProvider.get());
  }

  public static SignUpViewModel_Factory create(Provider<RegisterUseCase> registerUseCaseProvider,
      Provider<LocalRepositoryImplementation> mainRepositoryProvider) {
    return new SignUpViewModel_Factory(registerUseCaseProvider, mainRepositoryProvider);
  }

  public static SignUpViewModel newInstance(RegisterUseCase registerUseCase,
      LocalRepositoryImplementation mainRepository) {
    return new SignUpViewModel(registerUseCase, mainRepository);
  }
}
